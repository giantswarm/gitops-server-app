{{- if .Values.giantswarm.rbac.create -}}
{{- if semverCompare "<1.17-0" (include "common.capabilities.kubeVersion" .) -}}
apiVersion: rbac.authorization.k8s.io/v1beta1
{{- else }}
apiVersion: rbac.authorization.k8s.io/v1
{{- end }}
kind: ClusterRole
metadata:
  name: {{ include "chart.fullname" . }}
rules:
  # impersonation rules for ui calls
  {{- if .Values.giantswarm.rbac.impersonation.users.enabled }}
  - apiGroups: [""]
    resources: ["users"]
    verbs: [ "impersonate" ]
    {{- with .Values.giantswarm.rbac.impersonation.users.resourceNames }}
    resourceNames: {{ . | toJson }}
    {{- end }}
  {{- end }}
  {{- if .Values.giantswarm.rbac.impersonation.groups.enabled }}
  {{- if and .Values.giantswarm.rbac.impersonation.groups.enabled (not .Values.giantswarm.rbac.impersonation.users.enabled) }}
  {{- fail "Enabling impersonation for groups requires users impersonation permissions, see https://kubernetes.io/docs/reference/access-authn-authz/authentication/#user-impersonation" }}
  {{- end }}
  - apiGroups: [""]
    resources: ["groups"]
    verbs: [ "impersonate" ]
    {{- with .Values.giantswarm.rbac.impersonation.groups.resourceNames }}
    resourceNames: {{ . | toJson }}
    {{- end }}
  {{- end }}
  # Access to enterprise entitlement
  - apiGroups: [""]
    resources: [ "secrets" ]
    verbs: [ "get", "list" ]
    {{- with .Values.giantswarm.rbac.viewSecretsResourceNames }}
    resourceNames: {{ . | toJson }}
    {{- end }}
  # The service account needs to read namespaces to know where it can query
  - apiGroups: [ "" ]
    resources: [ "namespaces" ]
    verbs: [ "get", "list", "watch" ]
  # The service account needs to list custom resources to query if given feature
  # is available or not.
  - apiGroups: [ "apiextensions.k8s.io" ]
    resources: [ "customresourcedefinitions" ]
    verbs: [ "list" ]
{{- end -}}
